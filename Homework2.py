# Задача 1
# На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. 
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх 
# одной и той же стороной.
# Монетки
# Входные данные
# В первой строке входного файла INPUT.TXT записано натуральное число N (1 ≤ N ≤ 100) – число монеток. 
# В каждой из последующих N строк содержится одно целое число – 1 если монетка лежит решкой вверх 
# и 0 если вверх гербом.
# Выходные данные
# В выходной файл OUTPUT.TXT выведите минимальное количество монет, которые нужно перевернуть.

# from random import randint


# n = int(input('\nВведите число от 1 до 100: '))
# while n < 1 or n > 100:
#     print('\nВы ввели некорректное значение!')
#     n = int(input('Введите число от 1 до 100: '))
# statusCoin = []
# count1 = 0
# count0 = 0
# for i in range(n):
#     statusCoin.append(randint(0, 1))
#     if statusCoin[i] == 0:
#         count0 = count0 + 1
#     else:
#         count1 = count1 + 1
# print(f'\n{statusCoin}')
# if count0 > count1:
#     print(f'\nМинимальное число монеток, которые нужно перевернуть -> {count1}\n')
# else:
#     print(f'\nМинимальное число монеток, которые нужно перевернуть -> {count0}\n')



# Задача 2
# Требуется посчитать сумму целых чисел, расположенных между числами 1 и N включительно.
# Входные данные
# В единственной строке входного файла INPUT.TXT записано единственное целое число N, не превышающее 
# по абсолютной величине 10^4.
# Выходные данные
# В единственную строку выходного файла OUTPUT.TXT нужно вывести одно целое число — сумму чисел, 
# расположенных между 1 и N включительно.

# n = int(input('\nВведите число от 1 до 10 000: '))
# while n < 1 or n > 10000:
#     print('\nВы ввели некорректное значение!')
#     n = int(input('Введите число от 1 до 10 000: '))
# sum = 0
# for i in range(1, n + 1):
#     sum = sum + i
# print(f'\nCумма целых чисел, расположенных между числами 1 и {n} включительно -> {sum}\n')



# Задача 3
# Требуется найти наименьший натуральный делитель целого числа N, отличный от 1.
# Входные данные
# Входной файл INPUT.TXT содержит целое число N (1 < N ≤ 10^6).
# Выходные данные
# В выходной файл OUTPUT.TXT выведите ответ на задачу.

# n = int(input('\nВведите число от 1 до 1 000 000: '))
# while n < 1 or n > 1000000:
#     print('\nВы ввели некорректное значение!')
#     n = int(input('Введите число от 1 до 1 000 000: '))
# for i in range(2, n + 1):
#     if n % i == 0:
#         print(f'\nНаименьший натуральный делитель целого числа {n}, отличный от 1 -> {i}\n')
#         break



# Задача 4
# Петя впервые пришел на урок физкультуры в новой школе. Перед началом урока ученики выстраиваются по росту, 
# в порядке невозрастания. Напишите программу, которая определит на какое место в шеренге Пете нужно встать, 
# чтобы не нарушить традицию, если заранее известен рост каждого ученика и эти данные уже расположены по 
# невозрастанию (то есть каждое следующее число не больше предыдущего). Если в классе есть несколько учеников 
# с таким же ростом, как у Пети, то программа должна расположить его после них.
# Входные данные
# Первая строка входного файла INPUT.TXT содержит натуральное число N (N ≤ 100) – количество учеников 
# (не считая Петю). Во второй строке записаны N натуральных чисел Ai (Ai ≤ 200) – рост учеников в сантиметрах 
# в порядке невозрастания. Третья строка содержит единственное натуральное число X (X ≤ 200) – рост Пети.
# Выходные данные
# В выходной файл OUTPUT.TXT выведите единственное целое число – номер Пети в шеренге учеников.

# pupils = 20
# pupils_height = [145, 144, 143, 143, 142, 141, 141, 141, 140, 139, 138, 138, 137, 137, 136, 135, 133, 132, 132, 131, 0]
# petya_height = int(input('\nВведите рост Пети в сантиметрах: '))
# print(f'\n{pupils_height}')
# for i in range(21):
#     if pupils_height[i] < petya_height:
#         if pupils_height[i] == 0:
#             pupils_height[i] = petya_height
#         for j in range(20, i, -1):
#             pupils_height[j] = pupils_height[j - 1]
#         pupils_height[i] = petya_height
#         break
# print(f'\n{pupils_height}\n')
# print(f'Номер Пети в шеренге учеников -> {i + 1}\n')



# Задача 5 (Доп)
# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены только 
# по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на 
# i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего 
# модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым 
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном файле грядки.
# Входные данные
# Первая строка входного файла INPUT.TXT содержит целое число N (3 ≤ N ≤ 1000) – количество кустов черники. 
# Вторая строка содержит N целых положительных чисел a1, a2, ..., aN – число ягод черники, растущее на 
# соответствующем кусте. Все ai не превосходят 1000.
# Выходные данные
# В выходной файл OUTPUT.TXT выведите ответ на задачу.

# from random import randint


# n = int(input('\nВведите количество кустов черники от 3 до 1000: '))
# while n < 3 or n > 1000:
#     print('\nВы ввели некорректное значение!')
#     n = int(input('Введите количество кустов черники от 3 до 1000: '))
# bush = int(input('\nВыберите куст для сбора ягод: '))
# while bush < 1 or bush > n:
#     print('\nВы ввели некорректное значение!')
#     n = int(input('Выберите куст для сбора ягод: '))
# berries_number = {}
# for i in range(1, n + 1):
#     berries_number[i] = randint(0, 1000)
# max_berries = berries_number[bush] + berries_number[bush + 1] + berries_number[bush - 1]
# print(f'\n{berries_number}')
# print(f'\nМаксимальное число ягод -> {max_berries}\n')
